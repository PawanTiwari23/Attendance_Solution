/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import java.awt.Image;
import java.io.File;
import javax.swing.table.DefaultTableModel;
import utility.BDUtility;
//import com.sun.jdi.connect.spi.Connection;
import dao.ConnectionProvider;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;

import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import utility.BDUtility;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import net.glxn.qrgen.image.ImageType;
//import net.glxn.qrgen.core.scheme.VCard;
//import net.glxn.qrgen.javase.QRCode; // ✅ This is correct

//import net.glxn.qrgen.javase.QRCode;  // ✅ Correct import
import net.glxn.qrgen.image.ImageType;

import java.awt.Image;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;


 
import com.google.gson.Gson;
import static com.google.gson.internal.bind.util.ISO8601Utils.format;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.MultiFormatWriter;
import javax.swing.table.TableModel;
import java.util.Map;
import java.util.HashMap;
import javax.imageio.ImageIO;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.awt.Image;
import java.io.File;
import static java.lang.String.format;
import java.nio.file.FileSystems;
import java.nio.file.Path;
import static java.text.MessageFormat.format;
import javax.swing.ImageIcon;
//import net.glxn.qrgen.javase.QRCode;
import net.glxn.qrgen.QRCode; // ✅ correct
//import net.glxn.qrgen.vcard.VCard;


import com.google.zxing.BarcodeFormat;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import javax.swing.*;
import java.io.*;
import java.nio.file.FileSystems;
import java.nio.file.Path;


/**
 *
 * @author PAWAN
 */
public class ViewQrS extends javax.swing.JFrame {

    /**
     * Creates new form ViewQrS
     */
    public ViewQrS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        lblImage = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Exitbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQrList = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("           View QrS User");
        jLabel1.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        Exitbtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Exitbtn.setForeground(new java.awt.Color(255, 102, 255));
        Exitbtn.setText("X");
        Exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitbtnActionPerformed(evt);
            }
        });

        tblQrList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Email"
            }
        ));
        tblQrList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQrListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQrList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 402, Short.MAX_VALUE)
                        .addComponent(Exitbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Exitbtn)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ExitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitbtnActionPerformed
        // TODO add your handling code here:
        // System.exit(0);//Exit the page
        this.dispose(); // Exit the page
    }//GEN-LAST:event_ExitbtnActionPerformed
private ByteArrayOutputStream out = null;
private String email = null;

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
  /*
        DefaultTableModel model = (DefaultTableModel) tblQrList.getModel();
       File directory = new File(BDUtility.getpath("/qrCodes"));
           

        File[] files = directory.listFiles();
        if(files!= null) {
            for(File file : files) {
                model.addRow(new Object[] {file.getName(), file.length()});
                
            }
        }
        *//*
  
    JOptionPane.showMessageDialog(this, "Error generating QR: " + ex.getMessage());
}

              DefaultTableModel model = (DefaultTableModel) tblQrList.getModel();
    model.setRowCount(0); // Clear existing data

    // ✅ Get the user's "Documents/qrCodes" directory
    String userHome = System.getProperty("user.dir");
    String folderPath = userHome + File.separator + "\\src\\" + File.separator + "qrCodes";

    File directory = new File(folderPath);
    if (!directory.exists()) {
        directory.mkdirs(); // Create folder if it doesn't exist
    }

    File[] files = directory.listFiles();
    if (files != null) {
        for (File file : files) {
            if (file.isFile()) {
                model.addRow(new Object[]{file.getName()});
            }
        }
    }
        */
        
        
        
        //write code the email is showm tablw
        
         DefaultTableModel model = (DefaultTableModel) tblQrList.getModel();
        model.setRowCount(0);

        String userHome = System.getProperty("user.home");
        String folderPath = userHome + File.separator + "Documents" + File.separator + "qrCodes";
        File directory = new File(folderPath);

        if (!directory.exists()) {
            directory.mkdirs(); // Create if not exist
        }

        File[] files = directory.listFiles((dir, name) -> name.endsWith(".png"));
        if (files != null) {
            for (File file : files) {
                model.addRow(new Object[]{file.getName()});
            }
        }
    
        
   

         int selectedRow = tblQrList.getSelectedRow();
    if (selectedRow == -1) return;

    // Get file name like: someone@example.com.png
    String fileName = tblQrList.getValueAt(selectedRow, 0).toString();

    // Extract email by removing ".png"
    if (fileName.endsWith(".png")) {
        String email = fileName.substring(0, fileName.length() - 4);

        // Create data for QR (in JSON format)
        Map<String, String> data = new HashMap<>();
        data.put("email", email);
        String jsonData = new com.google.gson.Gson().toJson(data);

        try {
            // Generate QR code from JSON
            ByteArrayOutputStream out = net.glxn.qrgen.QRCode.from(jsonData)
                    .withSize(300, 300)
                    .to(net.glxn.qrgen.image.ImageType.PNG)
                    .stream();

            // Display the QR code in the label
            ByteArrayInputStream bis = new ByteArrayInputStream(out.toByteArray());
            Image image = ImageIO.read(bis);
            lblImage.setIcon(new ImageIcon(image));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "QR Generation Error: " + ex.getMessage());
        }
    }
        
        
        
        
    }//GEN-LAST:event_formComponentShown

    private void tblQrListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQrListMouseClicked
        // TODO add your handling code here:
        /*
        int index =tblQrList.getSelectedRow();
        TableModel model =tblQrList.getModel();
        String name = model.getValueAt(index,0).toString();
        ImageIcon icon = new ImageIcon(BDUtility.getPath("qrCodes" + File.separator + name));
        Image image = icon.getImage().getScaledInstance(322,286,Image.SCALE_SMOOTH);
        ImageIcon resizedIcon = new ImageIcon(image);
        lblImage.setIcon(resizedIcon);*/
        
        int index = tblQrList.getSelectedRow();
if (index == -1) return;

TableModel model = tblQrList.getModel();
String fileName = model.getValueAt(index, 0).toString();

// ✅ Build full path to the QR code file
String userHome = System.getProperty("user.home");
String filePath = userHome + File.separator + "Documents" + File.separator + "qrCodes" + File.separator + fileName;

// ✅ Load and scale the image
ImageIcon icon = new ImageIcon(filePath);
Image image = icon.getImage().getScaledInstance(322, 286, Image.SCALE_SMOOTH);
ImageIcon resizedIcon = new ImageIcon(image);

// ✅ Set the icon in the label
lblImage.setIcon(resizedIcon);

        
        
        
    }//GEN-LAST:event_tblQrListMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewQrS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewQrS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewQrS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewQrS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewQrS().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exitbtn;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImage;
    private javax.swing.JTable tblQrList;
    // End of variables declaration//GEN-END:variables
}
